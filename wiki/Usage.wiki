  * [#Basic_Usage Basic Usage]
  * [#Special_Keys Special Keys]
  * [#Configuration Configuration Options]

----
== Basic Usage ==

Type `:ConqueTerm <command>` to run your command in vim, for example:

{{{
:ConqueTerm bash
:ConqueTerm mysql -h localhost -u joe -p sock_collection
:ConqueTerm ipython
}}}

To open Conque in a new horizontal or vertical buffer use:

{{{
:ConqueTermSplit <command>
:ConqueTermVSplit <command>
:ConqueTermTab <command>
}}}

All text typed in `INSERT` mode will be sent to your shell. You can navigate/search/page through your output in `NORMAL` mode. 

----
== Special Keys ==

Use the `<F9>` key to send a visual selection from any buffer to the shell. By default, you must press the `<Esc>` key twice to send one escape key press to the terminal (see config below).

----
== Configuration ==

Place these settings in your `.vimrc` file to customize Conque. Default values are shown below.

==== Normal mode key ====

*`let g:ConqueTerm_EscKey = '<Esc>'`*

This option lets you choose which key you will use to leave insert mode, which also takes you out of the terminal input mode. By default this is the `<Esc>` key, like a normal Vim buffer.

However, you may want to be able to send the `<Esc>` key to the terminal, instead of leaving insert mode, for example if you use Vim key mappings to edit the bash command line. In this case you can configure Conque to use a different key to leave insert mode, and pressing `<Esc>` will send that key press to the terminal.

Control keys are the only that consistently work. Many others, e.g. the `<F->` keys, are internally coded with an escape at the beginning, and therefore won't work. A control key such as `<C-x>` will work fine.

==== Color mode ====

*`let g:ConqueTerm_Color = 1`*

Color is enabled by default. Color highlighting can slow down your shell significantly if it's heavily used. Setting this option to `0` will make Conque perform much better.

==== TERM setting ====

*`let g:ConqueTerm_TERM =  'vt100'`*

Conque uses the vt100 terminal setting by default. This will disable some features in some programs. You can try changing this to `xterm` if you're feeling adventurous.

==== Update unfocused shell window ====

*`let g:ConqueTerm_ReadUnfocused = 0`*

When you leave the terminal buffer, it will stop receiving updates. Setting this value to `1` will make Conque continue to update unfocused shell buffers. However, I have so far been unable to find a way to make an unfocused buffer scroll down while it's updating. So your mileage may vary.

==== Prompt syntax highlighting ====

" Use this regular expression to highlight prompt {{{
if !exists('g:ConqueTerm_PromptRegex')
    let g:ConqueTerm_PromptRegex = '^\w\+@[0-9A-Za-z_.-]\+:[0-9A-Za-z_./\~,:-]\+\$'
endif " }}}

" Allow user to use <C-w> keys to switch window in insert mode. {{{
if !exists('g:ConqueTerm_CWInsert')
    let g:ConqueTerm_CWInsert = 0
endif " }}}
